name: Build Electron Package

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.10.0'

      - name: Install dependencies
        run: npm install

      - name: Bump version for Windows
        id: extract-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF+=1; OFS="."; print $0}')
          echo "New version: $NEW_VERSION"
          npm version $NEW_VERSION --no-git-tag-version
          echo "::set-output name=version::$NEW_VERSION"

      - name: Build Electron App for Windows
        run: npm run build

      - name: Zip Windows package
        run: zip -r windows-${{ steps.extract-version.outputs.version }}.zip dist/

      - name: Upload Windows package to GitHub Releases
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: windows-${{ steps.extract-version.outputs.version }}.zip
          asset_name: windows-${{ steps.extract-version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Commit new version for Windows
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "Bump version to ${{ steps.extract-version.outputs.version }}"

      - name: Push changes back to repository
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.10.0'

      - name: Install dependencies
        run: npm install

      - name: Install required packages for Linux build
        run: sudo apt-get update && sudo apt-get install -y fakeroot rpm 

      - name: Bump version for Ubuntu
        id: extract-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(echo $VERSION | awk -F. '{$NF+=1; OFS="."; print $0}')
          echo "New version: $NEW_VERSION"
          npm version $NEW_VERSION --no-git-tag-version
          echo "::set-output name=version::$NEW_VERSION"

      - name: Build Electron App for Ubuntu
        run: npm run build

      - name: Zip Ubuntu package
        run: zip -r ubuntu-${{ steps.extract-version.outputs.version }}.zip dist/

      - name: Upload Ubuntu package to GitHub Releases
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ubuntu-${{ steps.extract-version.outputs.version }}.zip
          asset_name: ubuntu-${{ steps.extract-version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Commit new version for Ubuntu
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json
          git commit -m "Bump version to ${{ steps.extract-version.outputs.version }}"

      - name: Push changes back to repository
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
